1. Introduction

	The following section provides some preliminary information and an overview of the document.

1.1. Purpose

	This document describes how to build and deploy the Qtcam application software.
Qtcam is a camera application to capture photos and record videos. It is developed based on v4l2 framework and integrated with the help of Qt framework. 

	All the essential informations regarding building and deploying  process are unfolded:
1. How to  install library dependencies.
2. How to install and run the  software, and the system requirements. 

In addition to that, we collected some other useful  information related to the build process such as a description of the project repository and the design of the build system.

1.2. Readership

	The primary audience of this document is camera application developers who wish to build the software from scratch.  We assume the reader has some familiarity with the Linux, unix shells and a knowledge of the Qt framework.

	This document is also very useful as a guide to new developers and is a handy reference for camera application developers in linux. Moreover, the section on the design of the build system contains important information for the development. This is more technical information and is only targeted to developers.

1.3. Document Overview

	The rest of this document is organized in the following sections:

1.3.1. Project Repository: Contains useful information on how the repository is organized and how to download it from our github server.

1.3.2. Build Process: Details how to build the software from the source code and how to build the other third party softwares. Additional information on the various steps of the build process is also provided as well as a list of all required libraries.

1.3.3. Deployment: How to install and run the software.

1.3.4. Future Directions: What is coming next in the build system. Again, this section is mainly relevant to developers.

1.3.5 Legal: Licenses and copyright information.

2. Project Repository

2.1. Repository Organization

	The GitHub is the git module is the repository of the software artifacts of the Qtcam project. Its contents are as follows:

2.1.1 SRC: Contains the application source files.

2.1.2 LICENSE:  A README file specifies which license applies.

2.1.3 CHANGELOG:  New Application features and bug fixes are listed.

2.1.4 README: README file.

2.1.4 INSTALL: Installation procedure file.

2.2. Downloading from GitHub

	Download the source from the following repository,

# git clone https://github.com/econsysqtcam/qtcam.git

3. Design of the Build System

	The build process is designed  for linux machine.  User can download the source code of the application through git server.  

	Also user can install dependency library packages. Using Qt qmake tool, one can build the source.

3.1. System Requirements

In order to run Qtcam application, your system must have:

1. Qt 5.2.1
2. Operating System: Linux (Tested on Ubuntu 12.04 & 14.04)

3.2. Dependencies

To run the Qtcam application your system should meet the following dependencies.

3.2.1. Install Qt5.2.1 framework

Initially download the Qt package from the below link as per your system requirement,
For 32 Bit - http://download.qt.io/archive/qt/5.2/5.2.1/qt-opensource-linux-x86-5.2.1.run
For 64 Bit - http://download.qt.io/archive/qt/5.2/5.2.1/qt-opensource-linux-x64-5.2.1.run

To configure Qt, If permission is not given for user set it by using chmod command.

# chmod u+x  qt-opensource-linux-x86-5.2.1.run
(or)
# chmod u+x  qt-opensource-linux-x64-5.2.1.run
Then double click the downloaded binary and install it to your local system.

3.2.2. Run following command to install following list of dependency packages
 In ubuntu 12,
 $ sudo apt-get install libv4l-dev libgl1-mesa-dev libglu1-mesa-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libresample1-dev  libudev-dev libavcodec-extra-53 libjpeg-turbo8-dev libusb-1.0-0-dev
 $ sudo apt-add-repository ppa:qtcam/precise
 $ sudo apt-get install qt52base qt52declarative qt52-meta-full

 In ubuntu 14,
 $ sudo apt-get install libv4l-dev qt5-default libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev libudev-dev libavcodec-extra-54  qtdeclarative5-dev libusb-1.0-0-dev libjpeg-turbo8-dev qtdeclarative5-window-plugin qtdeclarative5-dialogs-plugin qtdeclarative5-controls-plugin  qtdeclarative5-qtquick2-plugin 

3.3 Build the application

You can build your application in two ways 
1. Qt Creator
2. Console

3.3.1 Using Qt Creator:
1.  Open the project in your Qt creator.
2. Provide your qmake path in the Tool->Options.(/home/@user/Qt5.2.1/5.2.1/gcc_64/bin/qmake)
3.  Right click in your project, click qmake.
4.  Right click in your project, click build
5.  Right click in your project, click run.

3.3.2 Using Console:
1.  Goto your git clone path.
2.  cd src/
3.  qmake,(For example, /home/@user/Qt5.2.1/5.2.1/gcc_64/bin/qmake)
4.  make clean
5.  make
6.  Execute the application.
    sudo ./Qtcam


4. Deployment
4.1 StandAlone
	Qtcam is a standalone application.  So the application setup creation can be installer, debian package, a tar file, etc..  E-Con releases the application setup as a debian package in ubuntu launchpad. 

4.2 Launchpad
4.2.1 Ubuntu 14
$ sudo apt-add-repository ppa:qtcam/trusty
$ sudo apt-get update
$ sudo apt-get install qtcam

4.2.2 Ubuntu 12
$ sudo apt-add-repository ppa:qtcam/precise
$ sudo apt-get update
$ sudo apt-get install qtcam

5. Future Directions

1. Tested with thirteen e-con cameras, supported needs to be extended to all v4l2 compactable uvc cameras.
2. Enhance the application by sending the captured data over the network.
3. Recording should come along with audio support also.

6. Legal

6.1 Licensing
	Please look into the LICENSE file available in the parent directory.

